{"ast":null,"code":"var _jsxFileName = \"/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioUpdate.js\",\n    _s = $RefreshSig$();\n\nimport PortfolioForm from \"./PortfolioForm\";\nimport Button from '../UI/Button';\nimport Modal from '../UI/Modal';\nimport FetchContext from \"../../Store/FetchContext\";\nimport { useContext, useState, useEffect, Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PortfolioUpdate(props) {\n  _s();\n\n  const ctx = useContext(FetchContext);\n  const [isRefreshed, setIsRefreshed] = useState(false);\n\n  async function onUpdateStockDataHandler(stockData) {\n    setIsRefreshed(true);\n    await fetch('http://127.0.0.1:8000/stock-update/' + props.id, {\n      method: 'POST',\n      body: JSON.stringify(stockData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setIsRefreshed(false);\n  }\n\n  useEffect(() => {\n    ctx.onFetchStockList();\n    ctx.onHideModal();\n  }, [isRefreshed]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PortfolioForm, {\n      onSaveStockData: onUpdateStockDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: props.onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PortfolioUpdate, \"f/XHLERpgdNIxV9k6hIjvgLh8l8=\");\n\n_c = PortfolioUpdate;\n;\nexport default PortfolioUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioUpdate\");","map":{"version":3,"sources":["/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioUpdate.js"],"names":["PortfolioForm","Button","Modal","FetchContext","useContext","useState","useEffect","Fragment","PortfolioUpdate","props","ctx","isRefreshed","setIsRefreshed","onUpdateStockDataHandler","stockData","fetch","id","method","body","JSON","stringify","headers","onFetchStockList","onHideModal","onClose"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAAQC,UAAR,EAAoBC,QAApB,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC5B,QAAMC,GAAG,GAAGN,UAAU,CAACD,YAAD,CAAtB;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;;AAEA,iBAAeQ,wBAAf,CAAwCC,SAAxC,EAAkD;AAC9CF,IAAAA,cAAc,CAAC,IAAD,CAAd;AACC,UAAMG,KAAK,CAAC,wCAAwCN,KAAK,CAACO,EAA/C,EAAkD;AAC1DC,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf,CAFoD;AAG1DO,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV;AAHiD,KAAlD,CAAX;AAODT,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,GAAG,CAACY,gBAAJ;AACAZ,IAAAA,GAAG,CAACa,WAAJ;AACH,GAHQ,EAGN,CAACZ,WAAD,CAHM,CAAT;AAKA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,eAAe,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEJ,KAAK,CAACe,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5BQhB,e;;KAAAA,e;AA4BR;AAED,eAAeA,eAAf","sourcesContent":["import PortfolioForm from \"./PortfolioForm\"\nimport Button from '../UI/Button';\nimport Modal from '../UI/Modal';\nimport FetchContext from \"../../Store/FetchContext\";\nimport {useContext, useState, useEffect, Fragment} from 'react';\n\nfunction PortfolioUpdate(props) {\n    const ctx = useContext(FetchContext);\n    const [isRefreshed, setIsRefreshed] = useState(false)\n\n    async function onUpdateStockDataHandler(stockData){\n        setIsRefreshed(true)\n         await fetch('http://127.0.0.1:8000/stock-update/' + props.id,{\n            method: 'POST',\n            body: JSON.stringify(stockData),\n            headers: {\n                'Content-Type':'application/json'\n            }\n        })\n        setIsRefreshed(false)\n    }\n\n    useEffect(() => {\n        ctx.onFetchStockList();\n        ctx.onHideModal();\n    }, [isRefreshed]);\n    \n    return (\n        <Fragment>\n            <PortfolioForm onSaveStockData={onUpdateStockDataHandler} />\n            <Button onClick={props.onClose}>Cancel</Button>\n        </Fragment>\n\n    )\n};\n\nexport default PortfolioUpdate\n"]},"metadata":{},"sourceType":"module"}
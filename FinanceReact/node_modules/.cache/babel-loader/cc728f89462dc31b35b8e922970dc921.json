{"ast":null,"code":"var _jsxFileName = \"/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport { React, Fragment, useState, useEffect, useCallback } from 'react';\nimport Card from '../UI/Card';\nimport PortfolioItem from './PortfolioItem';\nimport classes from './Portfolio.module.css';\nimport PortfolioAdd from './PortfolioAdd';\nimport Button from '../UI/Button';\nimport PortfolioHeader from './PortfolioHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Portfolio(props) {\n  _s();\n\n  const [stockLists, setStockLists] = useState([]);\n  const fetchStocklist = useCallback(async () => {\n    const response = await fetch('http://127.0.0.1:8000/stock-list/');\n    const data = await response.json();\n    setStockLists(...stockLists, data);\n  }, []);\n  useEffect(() => {\n    fetchStocklist();\n  }, [fetchStocklist]);\n  const [showModal, setShowModal] = useState();\n\n  const showModalHandler = props => {\n    setShowModal(true);\n  };\n\n  const hideModalHandler = props => {\n    setShowModal(false);\n  };\n\n  const ProcessedStockLists = stockLists.map(stock => {\n    key = stock.id, id = stock.id, stockName = stock.name, amount = stock.amount, mark = stock.mark;\n  }); // <PortfolioItem onDeleteStockHandler={fetchStocklist}/>\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: classes.table,\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(PortfolioHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PortfolioItem, {\n            id: ProcessedStockLists.id,\n            name: ProcessedStockLists.name,\n            amount: ProcessedStockLists.amount,\n            mark: ProcessedStockLists.mark\n          }, ProcessedStockLists.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: showModalHandler,\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), showModal && /*#__PURE__*/_jsxDEV(PortfolioAdd, {\n        onClose: hideModalHandler,\n        onRefresh: fetchStocklist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Portfolio, \"yRl4YF36hTdRBAphk9I6k3BVWM0=\");\n\n_c = Portfolio;\n;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/Portfolio.js"],"names":["React","Fragment","useState","useEffect","useCallback","Card","PortfolioItem","classes","PortfolioAdd","Button","PortfolioHeader","Portfolio","props","stockLists","setStockLists","fetchStocklist","response","fetch","data","json","showModal","setShowModal","showModalHandler","hideModalHandler","ProcessedStockLists","map","stock","key","id","stockName","name","amount","mark","table"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,WAA/C,QAAkE,OAAlE;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMa,cAAc,GAAGX,WAAW,CAAC,YAAY;AAC3C,UAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAL,IAAAA,aAAa,CAAC,GAAGD,UAAJ,EAAgBK,IAAhB,CAAb;AAEH,GANiC,EAM/B,EAN+B,CAAlC;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,cAAc;AACjB,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAKA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,EAA1C;;AAEA,QAAMoB,gBAAgB,GAAIV,KAAD,IAAW;AAChCS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAGA,QAAME,gBAAgB,GAAIX,KAAD,IAAW;AAChCS,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAGA,QAAMG,mBAAmB,GAAGX,UAAU,CAACY,GAAX,CAAeC,KAAK,IAAI;AAChDC,IAAAA,GAAG,GAAGD,KAAK,CAACE,EAAZ,EACIA,EAAE,GAAGF,KAAK,CAACE,EADf,EAEIC,SAAS,GAAGH,KAAK,CAACI,IAFtB,EAGIC,MAAM,GAAGL,KAAK,CAACK,MAHnB,EAIIC,IAAI,GAAGN,KAAK,CAACM,IAJjB;AAKH,GAN2B,CAA5B,CAxBsB,CA+BtB;;AAIA,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,IAAD;AAAA,8BACI;AAAO,QAAA,SAAS,EAAEzB,OAAO,CAAC0B,KAA1B;AAAA,+BACI;AAAA,kCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI,QAAC,aAAD;AAEI,YAAA,EAAE,EAAET,mBAAmB,CAACI,EAF5B;AAGI,YAAA,IAAI,EAAEJ,mBAAmB,CAACM,IAH9B;AAII,YAAA,MAAM,EAAEN,mBAAmB,CAACO,MAJhC;AAKI,YAAA,IAAI,EAAEP,mBAAmB,CAACQ;AAL9B,aACSR,mBAAmB,CAACI,EAD7B;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAcI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEN,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,EAeKF,SAAS,iBAAI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEG,gBAAvB;AAAyC,QAAA,SAAS,EAAER;AAApD;AAAA;AAAA;AAAA;AAAA,cAflB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA3DQJ,S;;KAAAA,S;AA2DR;AAED,eAAeA,SAAf","sourcesContent":["import { React, Fragment, useState, useEffect, useCallback } from 'react';\nimport Card from '../UI/Card';\nimport PortfolioItem from './PortfolioItem';\nimport classes from './Portfolio.module.css';\nimport PortfolioAdd from './PortfolioAdd';\nimport Button from '../UI/Button';\nimport PortfolioHeader from './PortfolioHeader'\n\n\nfunction Portfolio(props) {\n    const [stockLists, setStockLists] = useState([])\n\n    const fetchStocklist = useCallback(async () => {\n        const response = await fetch('http://127.0.0.1:8000/stock-list/')\n        const data = await response.json();\n\n        setStockLists(...stockLists, data)\n\n    }, []);\n\n    useEffect(() => {\n        fetchStocklist();\n    }, [fetchStocklist]);\n\n\n    const [showModal, setShowModal] = useState();\n\n    const showModalHandler = (props) => {\n        setShowModal(true)\n    }\n    const hideModalHandler = (props) => {\n        setShowModal(false)\n    }\n    const ProcessedStockLists = stockLists.map(stock => {\n        key = stock.id,\n            id = stock.id,\n            stockName = stock.name,\n            amount = stock.amount,\n            mark = stock.mark\n    });\n    // <PortfolioItem onDeleteStockHandler={fetchStocklist}/>\n\n\n\n    return (\n        <Fragment>\n            <Card>\n                <table className={classes.table}>\n                    <tbody>\n                        <PortfolioHeader></PortfolioHeader>\n\n                        <PortfolioItem\n                            key={ProcessedStockLists.id}\n                            id={ProcessedStockLists.id}\n                            name={ProcessedStockLists.name}\n                            amount={ProcessedStockLists.amount}\n                            mark={ProcessedStockLists.mark}\n                        />\n                    </tbody>\n                </table>\n                <Button onClick={showModalHandler}>ADD</Button>\n                {showModal && <PortfolioAdd onClose={hideModalHandler} onRefresh={fetchStocklist}></PortfolioAdd>}\n\n            </Card>\n        </Fragment>\n\n\n    )\n};\n\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}
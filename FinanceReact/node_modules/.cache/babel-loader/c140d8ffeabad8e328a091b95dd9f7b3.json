{"ast":null,"code":"var _jsxFileName = \"/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from './PortfolioForm.module.css';\nimport Button from '../UI/Button';\nimport { React, useState, Fragment, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PortfolioForm(props) {\n  _s();\n\n  const [enteredStock, setEnteredStock] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredMark, setEnteredMark] = useState('');\n  const [formIsValid, setFormIsValid] = useState(true);\n\n  const stockChangeHandler = event => {\n    setEnteredStock(event.target.value);\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const markChangeHandler = event => {\n    setEnteredMark(event.target.value);\n  };\n\n  const addUserHandler = event => {\n    event.preventDefault();\n\n    if (enteredStock.trim().length === 0 || enteredAmount.trim().length === 0 || enteredMark.trim().length === 0) {\n      setFormIsValid(false);\n      return;\n    }\n\n    if (+enteredAmount < 1) {\n      setFormIsValid(false);\n      return;\n    }\n\n    if (enteredMark < 1) {\n      setFormIsValid(false);\n      return;\n    }\n\n    const stockData = {\n      id: Math.random().toString(),\n      name: enteredStock,\n      amount: enteredAmount,\n      mark: enteredMark\n    };\n    props.onSaveStockData(stockData);\n    setEnteredStock('');\n    setEnteredAmount('');\n  };\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      if (enteredStock && enteredAmount && enteredMark) {\n        setFormIsValid(true);\n      }\n    }, 500);\n    return () => {\n      clearTimeout(identifier);\n    };\n  }, [enteredStock, enteredAmount, enteredMark]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addUserHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Stock Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        value: enteredStock,\n        onChange: stockChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"amount\",\n        type: \"number\",\n        value: enteredAmount,\n        onChange: amountChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"mark\",\n        children: \"Mark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"mark\",\n        type: \"number\",\n        value: enteredMark,\n        onChange: markChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), !formIsValid && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.invalid,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 34\n      }, this), formIsValid && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formIsValid,\n        children: \" Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PortfolioForm, \"Z7CoolZIkK7Azz+VCYzIa+8W9Ns=\");\n\n_c = PortfolioForm;\n;\nexport default PortfolioForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioForm\");","map":{"version":3,"sources":["/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioForm.js"],"names":["classes","Button","React","useState","Fragment","useEffect","PortfolioForm","props","enteredStock","setEnteredStock","enteredAmount","setEnteredAmount","enteredMark","setEnteredMark","formIsValid","setFormIsValid","stockChangeHandler","event","target","value","amountChangeHandler","markChangeHandler","addUserHandler","preventDefault","trim","length","stockData","id","Math","random","toString","name","amount","mark","onSaveStockData","identifier","setTimeout","clearTimeout","invalid"],"mappings":"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","sourcesContent":["import classes from './PortfolioForm.module.css'\nimport Button from '../UI/Button';\nimport { React, useState, Fragment, useEffect } from 'react';\n\n\nfunction PortfolioForm(props) {\n    const [enteredStock, setEnteredStock] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredMark, setEnteredMark] = useState('');\n    const [formIsValid, setFormIsValid] = useState(true);\n\n    const stockChangeHandler = (event) => {\n        setEnteredStock(event.target.value);\n    };\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    };\n    const markChangeHandler = (event) => {\n        setEnteredMark(event.target.value);\n    };\n\n    const addUserHandler = (event) => {\n        event.preventDefault();\n        if (enteredStock.trim().length === 0 || enteredAmount.trim().length === 0 || enteredMark.trim().length === 0) {\n            setFormIsValid(false)\n            return;\n        }\n\n        if (+enteredAmount < 1) {\n            setFormIsValid(false)\n            return;\n        }\n\n        if (enteredMark < 1) {\n            setFormIsValid(false)\n            return;\n        }\n\n\n        const stockData = {\n            id: Math.random().toString(),\n            name: enteredStock,\n            amount: enteredAmount,\n            mark: enteredMark\n        };\n\n\n        props.onSaveStockData(stockData);\n        setEnteredStock('');\n        setEnteredAmount('');\n\n    };\n\n\n\n    useEffect(() => {\n        const identifier = setTimeout(() => {\n            if(enteredStock && enteredAmount && enteredMark){\n                setFormIsValid(true);\n            }\n\n        }, 500);\n\n        return () => {\n            clearTimeout(identifier);\n        };\n    }, [enteredStock, enteredAmount, enteredMark]);\n\n    return (\n        <Fragment>\n            <form onSubmit={addUserHandler}>\n                <label htmlFor=\"name\">Stock Name</label>\n                <input id=\"name\" type=\"text\" value={enteredStock} onChange={stockChangeHandler}></input>\n                <label htmlFor=\"amount\">Amount</label>\n                <input id=\"amount\" type=\"number\" value={enteredAmount} onChange={amountChangeHandler}></input>\n                <label htmlFor=\"mark\">Mark</label>\n                <input id=\"mark\" type=\"number\" value={enteredMark} onChange={markChangeHandler}></input>\n                {!formIsValid && <button className={classes.invalid}>Confirm</button>}\n                {formIsValid && <Button type=\"submit\" disabled={!formIsValid}> Confirm</Button>}\n            </form>\n        </Fragment>\n    )\n};\n\nexport default PortfolioForm;"]},"metadata":{},"sourceType":"module"}
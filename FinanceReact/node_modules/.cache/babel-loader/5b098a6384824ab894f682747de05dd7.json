{"ast":null,"code":"import _asyncToGenerator from\"/Users/jordantay/Desktop/FinanceReact/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jordantay/Desktop/FinanceReact/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/jordantay/Desktop/FinanceReact/node_modules/@babel/runtime/regenerator/index.js\";import PortfolioForm from\"./PortfolioForm\";import Button from'../UI/Button';import Modal from'../UI/Modal';import FetchContext from\"../../Store/FetchContext\";import{useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PortfolioUpdate(props){var ctx=useContext(FetchContext);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isRefreshed=_useState2[0],setIsRefreshed=_useState2[1];function onUpdateStockDataHandler(_x){return _onUpdateStockDataHandler.apply(this,arguments);}function _onUpdateStockDataHandler(){_onUpdateStockDataHandler=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(stockData){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsRefreshed(true);_context.next=3;return fetch('http://127.0.0.1:8000/stock-update/'+props.id+'/',{method:'POST',body:JSON.stringify(stockData),headers:{'Content-Type':'application/json'}});case 3:setIsRefreshed(false);props.onClose();case 5:case\"end\":return _context.stop();}}},_callee);}));return _onUpdateStockDataHandler.apply(this,arguments);}useEffect(function(){ctx.onFetchStockList();},[isRefreshed]);return/*#__PURE__*/_jsxs(Modal,{onClose:props.onClose,children:[/*#__PURE__*/_jsx(PortfolioForm,{onSaveStockData:onUpdateStockDataHandler}),/*#__PURE__*/_jsx(Button,{onClick:props.onClose,children:\"Cancel\"})]});};export default PortfolioUpdate;","map":{"version":3,"sources":["/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioUpdate.js"],"names":["PortfolioForm","Button","Modal","FetchContext","useContext","useState","useEffect","PortfolioUpdate","props","ctx","isRefreshed","setIsRefreshed","onUpdateStockDataHandler","stockData","fetch","id","method","body","JSON","stringify","headers","onClose","onFetchStockList"],"mappings":"oXAAA,MAAOA,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,CACA,OAAQC,UAAR,CAAoBC,QAApB,CAA8BC,SAA9B,KAA8C,OAA9C,C,wFAEA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,GAAMC,CAAAA,GAAG,CAAGL,UAAU,CAACD,YAAD,CAAtB,CACA,cAAsCE,QAAQ,CAAC,KAAD,CAA9C,wCAAOK,WAAP,eAAoBC,cAApB,eAF4B,QAIbC,CAAAA,wBAJa,oLAI5B,iBAAwCC,SAAxC,kHACIF,cAAc,CAAC,IAAD,CAAd,CADJ,sBAEWG,CAAAA,KAAK,CAAC,sCAAwCN,KAAK,CAACO,EAA9C,CAAmD,GAApD,CAAwD,CAChEC,MAAM,CAAE,MADwD,CAEhEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf,CAF0D,CAGhEO,OAAO,CAAE,CACL,eAAe,kBADV,CAHuD,CAAxD,CAFhB,QASIT,cAAc,CAAC,KAAD,CAAd,CACAH,KAAK,CAACa,OAAN,GAVJ,sDAJ4B,2DAkB5Bf,SAAS,CAAC,UAAM,CACZG,GAAG,CAACa,gBAAJ,GACH,CAFQ,CAEN,CAACZ,WAAD,CAFM,CAAT,CAIA,mBACI,MAAC,KAAD,EAAO,OAAO,CAAEF,KAAK,CAACa,OAAtB,wBACI,KAAC,aAAD,EAAe,eAAe,CAAET,wBAAhC,EADJ,cAEI,KAAC,MAAD,EAAQ,OAAO,CAAEJ,KAAK,CAACa,OAAvB,oBAFJ,GADJ,CAOH,EAED,cAAed,CAAAA,eAAf","sourcesContent":["import PortfolioForm from \"./PortfolioForm\"\nimport Button from '../UI/Button';\nimport Modal from '../UI/Modal';\nimport FetchContext from \"../../Store/FetchContext\";\nimport {useContext, useState, useEffect} from 'react';\n\nfunction PortfolioUpdate(props) {\n    const ctx = useContext(FetchContext);\n    const [isRefreshed, setIsRefreshed] = useState(false)\n\n    async function onUpdateStockDataHandler(stockData){\n        setIsRefreshed(true)\n         await fetch('http://127.0.0.1:8000/stock-update/' + props.id + '/',{\n            method: 'POST',\n            body: JSON.stringify(stockData),\n            headers: {\n                'Content-Type':'application/json'\n            }\n        })\n        setIsRefreshed(false)\n        props.onClose()\n    }\n    \n\n    useEffect(() => {\n        ctx.onFetchStockList();\n    }, [isRefreshed]);\n    \n    return (\n        <Modal onClose={props.onClose}>\n            <PortfolioForm onSaveStockData={onUpdateStockDataHandler} />\n            <Button onClick={props.onClose}>Cancel</Button>\n        </Modal>\n\n    )\n};\n\nexport default PortfolioUpdate\n"]},"metadata":{},"sourceType":"module"}
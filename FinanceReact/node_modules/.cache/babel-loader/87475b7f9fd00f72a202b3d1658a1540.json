{"ast":null,"code":"import _asyncToGenerator from\"/Users/jordantay/Desktop/Apps/FinanceApp/FinanceReact/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jordantay/Desktop/Apps/FinanceApp/FinanceReact/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/jordantay/Desktop/Apps/FinanceApp/FinanceReact/node_modules/@babel/runtime/regenerator/index.js\";import{React,useState,useEffect,useCallback}from'react';import Card from'../UI/Card';import PortfolioItem from'./PortfolioItem';import classes from'./Portfolio.module.css';import PortfolioAdd from'./PortfolioAdd';import Button from'../UI/Button';import PortfolioHeader from'./PortfolioHeader';import FetchContext from'../../Store/FetchContext';import StockChart from'../../Charts/StockChart';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Portfolio(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),stockLists=_useState2[0],setStockLists=_useState2[1];var fetchStocklist=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('http://127.0.0.1:8000/stock-list/');case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;setStockLists(data);case 7:case\"end\":return _context.stop();}}},_callee);})),[]);useEffect(function(){fetchStocklist();},[fetchStocklist]);var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),showModal=_useState4[0],setShowModal=_useState4[1];var showModalHandler=function showModalHandler(props){setShowModal(true);};var hideModalHandler=function hideModalHandler(props){setShowModal(false);};var ProcessedStockLists=stockLists.map(function(stock){return/*#__PURE__*/_jsx(PortfolioItem,{id:stock.id,ticker:stock.ticker,name:stock.name,amount:stock.amount,mark:stock.mark},stock.id);});return/*#__PURE__*/_jsxs(FetchContext.Provider,{value:{onFetchStockList:fetchStocklist,onHideModal:hideModalHandler,onShowModal:showModalHandler,showModal:showModal},children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"table\",{className:classes.table,children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(PortfolioHeader,{}),ProcessedStockLists]})}),/*#__PURE__*/_jsx(Button,{onClick:showModalHandler,children:\"ADD\"}),showModal&&/*#__PURE__*/_jsx(PortfolioAdd,{onClose:hideModalHandler,onRefresh:fetchStocklist})]}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(StockChart,{stockLists:ProcessedStockLists})})]});};export default Portfolio;","map":{"version":3,"sources":["/Users/jordantay/Desktop/Apps/FinanceApp/FinanceReact/src/components/Portfolio/Portfolio.js"],"names":["React","useState","useEffect","useCallback","Card","PortfolioItem","classes","PortfolioAdd","Button","PortfolioHeader","FetchContext","StockChart","Portfolio","props","stockLists","setStockLists","fetchStocklist","fetch","response","json","data","showModal","setShowModal","showModalHandler","hideModalHandler","ProcessedStockLists","map","stock","id","ticker","name","amount","mark","onFetchStockList","onHideModal","onShowModal","table"],"mappings":"oaAAA,OAASA,KAAT,CAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,WAArC,KAAwD,OAAxD,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,C,wFAIA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACtB,cAAoCZ,QAAQ,CAAC,EAAD,CAA5C,wCAAOa,UAAP,eAAmBC,aAAnB,eAGA,GAAMC,CAAAA,cAAc,CAAGb,WAAW,sEAAC,2KACRc,CAAAA,KAAK,CAAC,mCAAD,CADG,QACzBC,QADyB,qCAEZA,CAAAA,QAAQ,CAACC,IAAT,EAFY,QAEzBC,IAFyB,eAI/BL,aAAa,CAACK,IAAD,CAAb,CAJ+B,sDAAD,GAM/B,EAN+B,CAAlC,CAQAlB,SAAS,CAAC,UAAM,CACZc,cAAc,GACjB,CAFQ,CAEN,CAACA,cAAD,CAFM,CAAT,CAKA,eAAkCf,QAAQ,EAA1C,yCAAOoB,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACV,KAAD,CAAW,CAChCS,YAAY,CAAC,IAAD,CAAZ,CACH,CAFD,CAGA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACX,KAAD,CAAW,CAChCS,YAAY,CAAC,KAAD,CAAZ,CACH,CAFD,CAGA,GAAMG,CAAAA,mBAAmB,CAAGX,UAAU,CAACY,GAAX,CAAe,SAAAC,KAAK,qBAC5C,KAAC,aAAD,EAEI,EAAE,CAAEA,KAAK,CAACC,EAFd,CAGI,MAAM,CAAED,KAAK,CAACE,MAHlB,CAII,IAAI,CAAEF,KAAK,CAACG,IAJhB,CAKI,MAAM,CAAEH,KAAK,CAACI,MALlB,CAMI,IAAI,CAAEJ,KAAK,CAACK,IANhB,EACSL,KAAK,CAACC,EADf,CAD4C,EAApB,CAA5B,CAYA,mBACI,MAAC,YAAD,CAAc,QAAd,EACI,KAAK,CAAE,CACHK,gBAAgB,CAAEjB,cADf,CAEHkB,WAAW,CAAEV,gBAFV,CAGHW,WAAW,CAAEZ,gBAHV,CAIHF,SAAS,CAAEA,SAJR,CADX,wBAOI,MAAC,IAAD,yBACI,cAAO,SAAS,CAAEf,OAAO,CAAC8B,KAA1B,uBACI,sCACI,KAAC,eAAD,IADJ,CAEKX,mBAFL,GADJ,EADJ,cAOI,KAAC,MAAD,EAAQ,OAAO,CAAEF,gBAAjB,iBAPJ,CAQKF,SAAS,eAAI,KAAC,YAAD,EAAc,OAAO,CAAEG,gBAAvB,CAAyC,SAAS,CAAER,cAApD,EARlB,GAPJ,cAkBI,KAAC,IAAD,wBACI,KAAC,UAAD,EAAY,UAAU,CAAES,mBAAxB,EADJ,EAlBJ,GADJ,CA0BH,EAED,cAAeb,CAAAA,SAAf","sourcesContent":["import { React, useState, useEffect, useCallback } from 'react';\nimport Card from '../UI/Card';\nimport PortfolioItem from './PortfolioItem';\nimport classes from './Portfolio.module.css';\nimport PortfolioAdd from './PortfolioAdd';\nimport Button from '../UI/Button';\nimport PortfolioHeader from './PortfolioHeader'\nimport FetchContext from '../../Store/FetchContext';\nimport StockChart from '../../Charts/StockChart';\n\n\n\nfunction Portfolio(props) {\n    const [stockLists, setStockLists] = useState([])\n\n\n    const fetchStocklist = useCallback(async () => {\n        const response = await fetch('http://127.0.0.1:8000/stock-list/')\n        const data = await response.json();\n\n        setStockLists(data)\n\n    }, []);\n\n    useEffect(() => {\n        fetchStocklist();\n    }, [fetchStocklist]);\n\n\n    const [showModal, setShowModal] = useState();\n\n    const showModalHandler = (props) => {\n        setShowModal(true)\n    }\n    const hideModalHandler = (props) => {\n        setShowModal(false)\n    }\n    const ProcessedStockLists = stockLists.map(stock =>\n        <PortfolioItem\n            key={stock.id}\n            id={stock.id}\n            ticker={stock.ticker}\n            name={stock.name}\n            amount={stock.amount}\n            mark={stock.mark}\n        />\n    );\n\n\n    return (\n        <FetchContext.Provider\n            value={{\n                onFetchStockList: fetchStocklist,\n                onHideModal: hideModalHandler,\n                onShowModal: showModalHandler,\n                showModal: showModal\n            }}>\n            <Card>\n                <table className={classes.table}>\n                    <tbody>\n                        <PortfolioHeader></PortfolioHeader>\n                        {ProcessedStockLists}\n                    </tbody>\n                </table>\n                <Button onClick={showModalHandler}>ADD</Button>\n                {showModal && <PortfolioAdd onClose={hideModalHandler} onRefresh={fetchStocklist}></PortfolioAdd>}\n\n            </Card>\n            <Card>\n                <StockChart stockLists={ProcessedStockLists}/>\n            </Card>\n        </FetchContext.Provider>\n\n\n    )\n};\n\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useCallback } from 'react';\nimport Card from '../UI/Card';\nimport PortfolioItem from './PortfolioItem';\nimport classes from './Portfolio.module.css';\nimport PortfolioAdd from './PortfolioAdd';\nimport Button from '../UI/Button';\nimport PortfolioHeader from './PortfolioHeader';\nimport FetchContext from '../../Store/FetchContext';\nimport StockChart from '../../Charts/StockChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Portfolio(props) {\n  _s();\n\n  const [stockLists, setStockLists] = useState([]);\n  const fetchStocklist = useCallback(async () => {\n    const response = await fetch('http://127.0.0.1:8000/stock-list/');\n    const data = await response.json();\n    setStockLists(data);\n  }, []);\n  useEffect(() => {\n    fetchStocklist();\n  }, [fetchStocklist]);\n  const [showModal, setShowModal] = useState();\n\n  const showModalHandler = props => {\n    setShowModal(true);\n  };\n\n  const hideModalHandler = props => {\n    setShowModal(false);\n  };\n\n  const ProcessedStockLists = stockLists.map(stock => /*#__PURE__*/_jsxDEV(PortfolioItem, {\n    id: stock.id,\n    ticker: stock.ticker,\n    name: stock.name,\n    amount: stock.amount,\n    mark: stock.mark\n  }, stock.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(FetchContext.Provider, {\n    value: {\n      onFetchStockList: fetchStocklist,\n      onHideModal: hideModalHandler,\n      onShowModal: showModalHandler,\n      showModal: showModal\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: classes.table,\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(PortfolioHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), ProcessedStockLists]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: showModalHandler,\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), showModal && /*#__PURE__*/_jsxDEV(PortfolioAdd, {\n        onClose: hideModalHandler,\n        onRefresh: fetchStocklist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StockChart, {\n        stockLists: ProcessedStockLists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Portfolio, \"yRl4YF36hTdRBAphk9I6k3BVWM0=\");\n\n_c = Portfolio;\n;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/Portfolio.js"],"names":["React","useState","useEffect","useCallback","Card","PortfolioItem","classes","PortfolioAdd","Button","PortfolioHeader","FetchContext","StockChart","Portfolio","props","stockLists","setStockLists","fetchStocklist","response","fetch","data","json","showModal","setShowModal","showModalHandler","hideModalHandler","ProcessedStockLists","map","stock","id","ticker","name","amount","mark","onFetchStockList","onHideModal","onShowModal","table"],"mappings":"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","sourcesContent":["import { React, useState, useEffect, useCallback } from 'react';\nimport Card from '../UI/Card';\nimport PortfolioItem from './PortfolioItem';\nimport classes from './Portfolio.module.css';\nimport PortfolioAdd from './PortfolioAdd';\nimport Button from '../UI/Button';\nimport PortfolioHeader from './PortfolioHeader'\nimport FetchContext from '../../Store/FetchContext';\nimport StockChart from '../../Charts/StockChart';\n\n\n\nfunction Portfolio(props) {\n    const [stockLists, setStockLists] = useState([])\n\n\n    const fetchStocklist = useCallback(async () => {\n        const response = await fetch('http://127.0.0.1:8000/stock-list/')\n        const data = await response.json();\n\n        setStockLists(data)\n\n    }, []);\n\n    useEffect(() => {\n        fetchStocklist();\n    }, [fetchStocklist]);\n\n\n    const [showModal, setShowModal] = useState();\n\n    const showModalHandler = (props) => {\n        setShowModal(true)\n    }\n    const hideModalHandler = (props) => {\n        setShowModal(false)\n    }\n    const ProcessedStockLists = stockLists.map(stock =>\n        <PortfolioItem\n            key={stock.id}\n            id={stock.id}\n            ticker={stock.ticker}\n            name={stock.name}\n            amount={stock.amount}\n            mark={stock.mark}\n        />\n    );\n\n\n    return (\n        <FetchContext.Provider\n            value={{\n                onFetchStockList: fetchStocklist,\n                onHideModal: hideModalHandler,\n                onShowModal: showModalHandler,\n                showModal: showModal\n            }}>\n            <Card>\n                <table className={classes.table}>\n                    <tbody>\n                        <PortfolioHeader></PortfolioHeader>\n                        {ProcessedStockLists}\n                    </tbody>\n                </table>\n                <Button onClick={showModalHandler}>ADD</Button>\n                {showModal && <PortfolioAdd onClose={hideModalHandler} onRefresh={fetchStocklist}></PortfolioAdd>}\n\n            </Card>\n            <Card>\n                <h1>Title</h1>\n                <StockChart stockLists={ProcessedStockLists}/>\n            </Card>\n        </FetchContext.Provider>\n\n\n    )\n};\n\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}
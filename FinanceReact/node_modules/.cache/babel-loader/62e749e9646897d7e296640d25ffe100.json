{"ast":null,"code":"var _jsxFileName = \"/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from './PortfolioForm.module.css';\nimport Button from '../UI/Button';\nimport { React, useState, Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PortfolioForm(props) {\n  _s();\n\n  const [enteredStock, setEnteredStock] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredMark, setEnteredMark] = useState('');\n  const [error, setError] = useState();\n\n  const stockChangeHandler = event => {\n    setEnteredStock(event.target.value);\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const markChangeHandler = event => {\n    setEnteredMark(event.target.value);\n  };\n\n  const addUserHandler = event => {\n    event.preventDefault();\n\n    if (enteredStock.trim().length === 0 || enteredAmount.trim().length === 0) {\n      setError({\n        title: 'invalid input',\n        message: 'Please enter a valid stock name and amount (non-empty values).'\n      });\n      return;\n    }\n\n    if (+enteredAmount < 1) {\n      setError({\n        title: 'invalid amount',\n        message: 'Please enter a valid amount (>0).'\n      });\n      return;\n    }\n\n    const stockData = {\n      id: Math.random().toString(),\n      name: enteredStock,\n      amount: enteredAmount,\n      mark: enteredMark\n    };\n    props.onSaveStockData(stockData);\n    setEnteredStock('');\n    setEnteredAmount('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Stock Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          value: enteredStock,\n          onChange: stockChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"amount\",\n          type: \"number\",\n          value: enteredAmount,\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mark\",\n          children: \"Mark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"mark\",\n          type: \"number\",\n          value: enteredMark,\n          onChange: markChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \" Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PortfolioForm, \"x020JjUqaaJWYdHqgT02+pRkS34=\");\n\n_c = PortfolioForm;\n;\nexport default PortfolioForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioForm\");","map":{"version":3,"sources":["/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioForm.js"],"names":["classes","Button","React","useState","Fragment","PortfolioForm","props","enteredStock","setEnteredStock","enteredAmount","setEnteredAmount","enteredMark","setEnteredMark","error","setError","stockChangeHandler","event","target","value","amountChangeHandler","markChangeHandler","addUserHandler","preventDefault","trim","length","title","message","stockData","id","Math","random","toString","name","amount","mark","onSaveStockData","container"],"mappings":"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","sourcesContent":["import classes from './PortfolioForm.module.css'\nimport Button from '../UI/Button';\nimport { React, useState, Fragment } from 'react';\n\nfunction PortfolioForm(props) {\n    const [enteredStock, setEnteredStock] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredMark, setEnteredMark] = useState('');\n    const [error, setError] = useState();\n\n    const stockChangeHandler = (event) => {\n        setEnteredStock(event.target.value);\n    };\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    };\n    const markChangeHandler = (event) => {\n        setEnteredMark(event.target.value);\n    };\n\n    const addUserHandler = (event) => {\n        event.preventDefault();\n        if (enteredStock.trim().length === 0 || enteredAmount.trim().length === 0) {\n            setError({\n                title: 'invalid input',\n                message: 'Please enter a valid stock name and amount (non-empty values).'\n            });\n            return;\n        }\n\n        if (+enteredAmount < 1) {\n            setError({\n                title: 'invalid amount',\n                message: 'Please enter a valid amount (>0).'\n            });\n            return;\n        }\n\n        const stockData = {\n            id: Math.random().toString(),\n            name: enteredStock,\n            amount: enteredAmount,\n            mark: enteredMark\n        };\n\n\n        props.onSaveStockData(stockData);\n        setEnteredStock('');\n        setEnteredAmount('');\n\n    };\n    return (\n        <Fragment>\n            <div className={classes.container}>\n                <form onSubmit={addUserHandler}>\n                    <label htmlFor=\"name\">Stock Name</label>\n                    <input id=\"name\" type=\"text\" value={enteredStock} onChange={stockChangeHandler}></input>\n                    <label htmlFor=\"amount\">Amount</label>\n                    <input id=\"amount\" type=\"number\" value={enteredAmount} onChange={amountChangeHandler}></input>\n                    <label htmlFor=\"mark\">Mark</label>\n                    <input id=\"mark\" type=\"number\" value={enteredMark} onChange={markChangeHandler}></input>\n                    <Button type=\"submit\" > Confirm</Button>\n                </form>\n            </div>\n        </Fragment>\n    )\n};\n\nexport default PortfolioForm;"]},"metadata":{},"sourceType":"module"}
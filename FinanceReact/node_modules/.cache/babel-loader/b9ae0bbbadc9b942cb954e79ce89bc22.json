{"ast":null,"code":"var _jsxFileName = \"/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioUpdate.js\",\n    _s = $RefreshSig$();\n\nimport PortfolioForm from \"./PortfolioForm\";\nimport Button from '../UI/Button';\nimport Modal from '../UI/Modal';\nimport FetchContext from \"../../Store/FetchContext\";\nimport { useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PortfolioUpdate(props) {\n  _s();\n\n  const ctx = useContext(FetchContext);\n  const [isRefreshed, setIsRefreshed] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  async function onUpdateStockDataHandler(stockData) {\n    setIsRefreshed(true);\n    await fetch('http://127.0.0.1:8000/stock-update/' + props.id, {\n      method: 'POST',\n      body: JSON.stringify(stockData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setIsRefreshed(false);\n    props.onClose();\n  }\n\n  useEffect(() => {\n    ctx.onFetchStockList();\n  }, [isRefreshed]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [/*#__PURE__*/_jsxDEV(PortfolioForm, {\n      onSaveStockData: onUpdateStockDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: props.onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PortfolioUpdate, \"2ew/A/QsV8ZEi/0+fybu2F3FxLs=\");\n\n_c = PortfolioUpdate;\n;\nexport default PortfolioUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioUpdate\");","map":{"version":3,"sources":["/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioUpdate.js"],"names":["PortfolioForm","Button","Modal","FetchContext","useContext","useState","useEffect","PortfolioUpdate","props","ctx","isRefreshed","setIsRefreshed","showModal","setShowModal","onUpdateStockDataHandler","stockData","fetch","id","method","body","JSON","stringify","headers","onClose","onFetchStockList"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAAQC,UAAR,EAAoBC,QAApB,EAA8BC,SAA9B,QAA8C,OAA9C;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC5B,QAAMC,GAAG,GAAGL,UAAU,CAACD,YAAD,CAAtB;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;;AAEA,iBAAeS,wBAAf,CAAwCC,SAAxC,EAAkD;AAC9CJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACC,UAAMK,KAAK,CAAC,wCAAwCR,KAAK,CAACS,EAA/C,EAAkD;AAC1DC,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf,CAFoD;AAG1DO,MAAAA,OAAO,EAAE;AACL,wBAAe;AADV;AAHiD,KAAlD,CAAX;AAODX,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAH,IAAAA,KAAK,CAACe,OAAN;AACH;;AAGDjB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,GAAG,CAACe,gBAAJ;AACH,GAFQ,EAEN,CAACd,WAAD,CAFM,CAAT;AAIA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEF,KAAK,CAACe,OAAtB;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,eAAe,EAAET;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,KAAK,CAACe,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA9BQhB,e;;KAAAA,e;AA8BR;AAED,eAAeA,eAAf","sourcesContent":["import PortfolioForm from \"./PortfolioForm\"\nimport Button from '../UI/Button';\nimport Modal from '../UI/Modal';\nimport FetchContext from \"../../Store/FetchContext\";\nimport {useContext, useState, useEffect} from 'react';\n\nfunction PortfolioUpdate(props) {\n    const ctx = useContext(FetchContext);\n    const [isRefreshed, setIsRefreshed] = useState(false)\n    const [showModal, setShowModal] = useState(false)\n\n    async function onUpdateStockDataHandler(stockData){\n        setIsRefreshed(true)\n         await fetch('http://127.0.0.1:8000/stock-update/' + props.id,{\n            method: 'POST',\n            body: JSON.stringify(stockData),\n            headers: {\n                'Content-Type':'application/json'\n            }\n        })\n        setIsRefreshed(false)\n        props.onClose()\n    }\n    \n\n    useEffect(() => {\n        ctx.onFetchStockList();\n    }, [isRefreshed]);\n    \n    return (\n        <Modal onClose={props.onClose}>\n            <PortfolioForm onSaveStockData={onUpdateStockDataHandler} />\n            <Button onClick={props.onClose}>Cancel</Button>\n        </Modal>\n\n    )\n};\n\nexport default PortfolioUpdate\n"]},"metadata":{},"sourceType":"module"}
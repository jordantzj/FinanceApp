{"ast":null,"code":"var _jsxFileName = \"/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from './PortfolioForm.module.css';\nimport Button from '../UI/Button';\nimport { React, useState, Fragment, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PortfolioForm(props) {\n  _s();\n\n  const [enteredStock, setEnteredStock] = useState('');\n  const [enteredTicker, setEnteredTicker] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredMark, setEnteredMark] = useState('');\n  const [formIsValid, setFormIsValid] = useState(false); //const [error, setError] = useState('');\n\n  const tickerChangeHandler = event => {\n    setEnteredTicker(event.target.value);\n  };\n\n  const stockChangeHandler = event => {\n    const APIKEY = 'GCtknMw46M8sqfHfm639066y2xmvr95t5A16rhkx';\n    var stockName = {\n      method: 'GET',\n      url: 'https://yfapi.net/v6/finance/quote?symbols=' + props.ticker,\n      params: {\n        modules: 'defaultKeyStatistics,assetProfile'\n      },\n      headers: {\n        \"x-api-key\": APIKEY\n      }\n    };\n    axios.request(stockName).then(function (response) {\n      const stockName = response.data.quoteResponse.result[0];\n      console.log(stockName);\n    }).catch(function (error) {\n      console.error(error);\n    });\n    setEnteredStock(event.target.value);\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const markChangeHandler = event => {\n    setEnteredMark(event.target.value);\n  };\n\n  const addStockHandler = event => {\n    event.preventDefault();\n    const stockData = {\n      ticker: enteredTicker,\n      name: enteredStock,\n      amount: enteredAmount,\n      mark: enteredMark\n    };\n    props.onSaveStockData(stockData);\n    setEnteredTicker('');\n    setEnteredStock('');\n    setEnteredAmount('');\n    setEnteredMark('');\n  };\n\n  useEffect(() => {\n    let arr1 = [enteredStock.trim().length !== 0, enteredAmount.trim().length !== 0, enteredMark.trim().length !== 0, enteredAmount > 0, enteredMark > 0];\n\n    let checker = arr => arr.every(v => v === true);\n\n    if (checker(arr1)) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredStock, enteredAmount, enteredMark]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addStockHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"ticker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"ticker\",\n        type: \"text\",\n        value: enteredTicker,\n        onChange: tickerChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Stock Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        value: enteredStock,\n        onChange: stockChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"amount\",\n        type: \"number\",\n        value: enteredAmount,\n        onChange: amountChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"mark\",\n        children: \"Mark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"mark\",\n        type: \"number\",\n        value: enteredMark,\n        onChange: markChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), !formIsValid && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.invalid,\n        disabled: !formIsValid,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 34\n      }, this), formIsValid && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \" Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PortfolioForm, \"zosK1OXWQVkxYDJTRWcM72ZpgFg=\");\n\n_c = PortfolioForm;\n;\nexport default PortfolioForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioForm\");","map":{"version":3,"sources":["/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioForm.js"],"names":["classes","Button","React","useState","Fragment","useEffect","PortfolioForm","props","enteredStock","setEnteredStock","enteredTicker","setEnteredTicker","enteredAmount","setEnteredAmount","enteredMark","setEnteredMark","formIsValid","setFormIsValid","tickerChangeHandler","event","target","value","stockChangeHandler","APIKEY","stockName","method","url","ticker","params","modules","headers","axios","request","then","response","data","quoteResponse","result","console","log","catch","error","amountChangeHandler","markChangeHandler","addStockHandler","preventDefault","stockData","name","amount","mark","onSaveStockData","arr1","trim","length","checker","arr","every","v","invalid"],"mappings":"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","sourcesContent":["import classes from './PortfolioForm.module.css'\nimport Button from '../UI/Button';\nimport { React, useState, Fragment, useEffect } from 'react';\n\n\nfunction PortfolioForm(props) {\n    const [enteredStock, setEnteredStock] = useState('');\n    const [enteredTicker, setEnteredTicker] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredMark, setEnteredMark] = useState('');\n    const [formIsValid, setFormIsValid] = useState(false);\n    //const [error, setError] = useState('');\n\n    const tickerChangeHandler = (event) => {\n        setEnteredTicker(event.target.value);\n    };\n\n    const stockChangeHandler = (event) => {\n        const APIKEY = 'GCtknMw46M8sqfHfm639066y2xmvr95t5A16rhkx'\n        var stockName = {\n            method: 'GET',\n            url: 'https://yfapi.net/v6/finance/quote?symbols=' + props.ticker,\n            params: { modules: 'defaultKeyStatistics,assetProfile' },\n            headers: {\n                \"x-api-key\": APIKEY\n            }\n        };\n        axios.request(stockName).then(function (response) {\n            const stockName = response.data.quoteResponse.result[0]\n            console.log(stockName)\n        }).catch(function (error) {\n            console.error(error)\n        })\n        \n\n        setEnteredStock(event.target.value);\n    };\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    };\n    const markChangeHandler = (event) => {\n        setEnteredMark(event.target.value);\n    };\n\n\n    const addStockHandler = (event) => {\n        event.preventDefault();\n\n        const stockData = {\n            ticker: enteredTicker,\n            name: enteredStock,\n            amount: enteredAmount,\n            mark: enteredMark\n        };\n\n\n\n        props.onSaveStockData(stockData);\n        setEnteredTicker('');\n        setEnteredStock('');\n        setEnteredAmount('');\n        setEnteredMark('');\n\n\n    };\n\n\n\n    useEffect(() => {\n        let arr1 = [enteredStock.trim().length !== 0,\n        enteredAmount.trim().length !== 0,\n        enteredMark.trim().length !== 0,\n        enteredAmount > 0,\n        enteredMark > 0];\n\n        let checker = arr => arr.every(v => v === true);\n        if (checker(arr1)) {\n            setFormIsValid(true)\n        } else {\n            setFormIsValid(false)\n        }\n    }, [enteredStock, enteredAmount, enteredMark]);\n\n    return (\n        <Fragment>\n            <form onSubmit={addStockHandler}>\n                <label htmlFor=\"name\">ticker</label>\n                <input id=\"ticker\" type=\"text\" value={enteredTicker} onChange={tickerChangeHandler}></input>\n                <label htmlFor=\"name\">Stock Name</label>\n                <input id=\"name\" type=\"text\" value={enteredStock} onChange={stockChangeHandler}></input>\n                <label htmlFor=\"amount\">Amount</label>\n                <input id=\"amount\" type=\"number\" value={enteredAmount} onChange={amountChangeHandler}></input>\n                <label htmlFor=\"mark\">Mark</label>\n                <input id=\"mark\" type=\"number\" value={enteredMark} onChange={markChangeHandler}></input>\n                {!formIsValid && <button className={classes.invalid} disabled={!formIsValid}>Confirm</button>}\n                {formIsValid && <Button type=\"submit\" > Confirm</Button>}\n            </form>\n        </Fragment>\n    )\n};\n\nexport default PortfolioForm;"]},"metadata":{},"sourceType":"module"}
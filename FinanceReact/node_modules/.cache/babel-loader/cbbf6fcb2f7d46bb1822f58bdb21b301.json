{"ast":null,"code":"var _jsxFileName = \"/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from './PortfolioForm.module.css';\nimport Button from '../UI/Button';\nimport { React, useState, Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PortfolioForm(props) {\n  _s();\n\n  const [enteredStock, setEnteredStock] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [error, setError] = useState();\n\n  const stockChangeHandler = event => {\n    setEnteredStock(event.target.value);\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const addUserHandler = event => {\n    event.preventDefault();\n\n    if (enteredStock.trim().length === 0 || enteredAmount.trim().length === 0) {\n      setError({\n        title: 'invalid input',\n        message: 'Please enter a valid stock name and amount (non-empty values).'\n      });\n      return;\n    }\n\n    if (+enteredAmount < 1) {\n      setError({\n        title: 'invalid amount',\n        message: 'Please enter a valid amount (>0).'\n      });\n      return;\n    }\n\n    const stockData = {\n      id: Math.random().toString(),\n      name: enteredStock,\n      amount: enteredAmount\n    };\n    props.onSaveStockData(stockData);\n    setEnteredStock('');\n    setEnteredAmount('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addUserHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Stock Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        value: enteredStock,\n        onChange: stockChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"amount\",\n        type: \"number\",\n        value: enteredAmount,\n        onChange: amountChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \" Add Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PortfolioForm, \"oynkjrUc4IQ3XfwRiVkqFoArb8A=\");\n\n_c = PortfolioForm;\n;\nexport default PortfolioForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioForm\");","map":{"version":3,"sources":["/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioForm.js"],"names":["classes","Button","React","useState","Fragment","PortfolioForm","props","enteredStock","setEnteredStock","enteredAmount","setEnteredAmount","error","setError","stockChangeHandler","event","target","value","amountChangeHandler","addUserHandler","preventDefault","trim","length","title","message","stockData","id","Math","random","toString","name","amount","onSaveStockData"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,4BAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;;AAEA,QAAMU,kBAAkB,GAAIC,KAAD,IAAU;AACjCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAIA,QAAMC,mBAAmB,GAAIH,KAAD,IAAW;AACnCJ,IAAAA,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACH,GAFD;;AAIA,QAAME,cAAc,GAAIJ,KAAD,IAAU;AAC7BA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAIZ,YAAY,CAACa,IAAb,GAAoBC,MAApB,KAA+B,CAA/B,IAAoCZ,aAAa,CAACW,IAAd,GAAqBC,MAArB,KAAgC,CAAxE,EAA0E;AACtET,MAAAA,QAAQ,CAAC;AACLU,QAAAA,KAAK,EAAE,eADF;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIA;AACH;;AAED,QAAG,CAACd,aAAD,GAAiB,CAApB,EAAsB;AAClBG,MAAAA,QAAQ,CAAC;AACLU,QAAAA,KAAK,EAAE,gBADF;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIA;AACH;;AAED,UAAMC,SAAS,GAAG;AACdC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADU;AAEdC,MAAAA,IAAI,EAAEtB,YAFQ;AAGduB,MAAAA,MAAM,EAAErB;AAHM,KAAlB;AAOAH,IAAAA,KAAK,CAACyB,eAAN,CAAsBP,SAAtB;AACAhB,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AAEH,GA7BD;;AA8BA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEQ,cAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,EAAE,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAA6B,QAAA,KAAK,EAAEX,YAApC;AAAkD,QAAA,QAAQ,EAAEM;AAA5D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,EAAE,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,KAAK,EAAEJ,aAAxC;AAAuD,QAAA,QAAQ,EAAEQ;AAAjE;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAtDQZ,a;;KAAAA,a;AAsDR;AAED,eAAeA,aAAf","sourcesContent":["import classes from './PortfolioForm.module.css'\nimport Button from '../UI/Button';\nimport {React, useState, Fragment} from 'react';\n\nfunction PortfolioForm(props) {\n    const [enteredStock, setEnteredStock] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [error, setError] = useState();\n\n    const stockChangeHandler = (event) =>{\n        setEnteredStock(event.target.value);\n    };\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    };\n    \n    const addUserHandler = (event) =>{\n        event.preventDefault();\n        if (enteredStock.trim().length === 0 || enteredAmount.trim().length === 0){\n            setError({\n                title: 'invalid input',\n                message: 'Please enter a valid stock name and amount (non-empty values).'\n            });\n            return;\n        }\n\n        if(+enteredAmount < 1){\n            setError({\n                title: 'invalid amount',\n                message: 'Please enter a valid amount (>0).'\n            });\n            return;\n        }\n\n        const stockData = {\n            id: Math.random().toString(),\n            name: enteredStock,\n            amount: enteredAmount\n        };\n        \n\n        props.onSaveStockData(stockData);\n        setEnteredStock('');\n        setEnteredAmount('');\n\n    };\n    return (\n        <Fragment>\n            <form onSubmit={addUserHandler}>\n                <label htmlFor=\"name\">Stock Name</label>\n                <input id=\"name\" type=\"text\" value={enteredStock} onChange={stockChangeHandler}></input>\n                <label htmlFor=\"amount\">Amount</label>\n                <input id=\"amount\" type=\"number\" value={enteredAmount} onChange={amountChangeHandler}></input>\n                <Button type=\"submit\" > Add Stock</Button>\n            </form>\n        </Fragment>\n    )\n};\n\nexport default PortfolioForm;"]},"metadata":{},"sourceType":"module"}
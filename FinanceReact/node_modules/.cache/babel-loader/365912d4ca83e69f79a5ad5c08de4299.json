{"ast":null,"code":"var _jsxFileName = \"/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioItem.js\",\n    _s = $RefreshSig$();\n\nimport classes from './PortfolioItem.module.css';\nimport { Fragment, useContext, useEffect, useState } from 'react';\nimport ButtonDelete from '../UI/ButtonDelete';\nimport FetchContext from '../../Store/FetchContext';\nimport ButtonUpdate from '../UI/ButtonUpdate';\nimport PortfolioUpdate from './PortfolioUpdate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar axios = require(\"axios\").default;\n\nfunction PortfolioItem(props) {\n  _s();\n\n  const ctx = useContext(FetchContext);\n  const [showModal, setShowModal] = useState(false);\n  const [isRefreshed, setIsRefreshed] = useState(false);\n\n  async function onDeleteStockHandler() {\n    setIsRefreshed(true);\n    await fetch('http://127.0.0.1:8000/stock-delete/' + props.id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setIsRefreshed(false);\n  }\n\n  useEffect(() => {\n    ctx.onFetchStockList();\n  }, [isRefreshed]);\n\n  const onShowModalHandler = () => {\n    setShowModal(true);\n  };\n\n  const hideModalHandler = () => {\n    setShowModal(false);\n  };\n\n  useEffect(() => {\n    const APIKEY = 'GCtknMw46M8sqfHfm639066y2xmvr95t5A16rhkx';\n    var stockPrice = {\n      method: 'GET',\n      url: 'https://yfapi.net/v6/finance/quote?symbols=' + props.ticker,\n      params: {\n        modules: 'defaultKeyStatistics,assetProfile'\n      },\n      headers: {\n        \"x-api-key\": APIKEY\n      }\n    };\n    axios.request(stockPrice).then(function (response) {\n      const stockBid = response.data.quoteResponse.result[0].bid;\n      const stockAsk = response.data.quoteResponse.result[0].ask;\n      const currentPrice = (stockAsk + stockBid) / 2;\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td,\n        children: [props.ticker, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td,\n        children: [props.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td,\n        children: [currentPrice, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td_amount,\n        children: props.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classes.td,\n        children: [\" $\", props.mark]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(ButtonDelete, {\n          onClick: onDeleteStockHandler,\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(ButtonUpdate, {\n          onClick: onShowModalHandler,\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), showModal && /*#__PURE__*/_jsxDEV(PortfolioUpdate, {\n        onClose: hideModalHandler,\n        id: props.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PortfolioItem, \"c/jstY6xWTaphrmACRO/iLVH4ZU=\");\n\n_c = PortfolioItem;\nexport default PortfolioItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioItem\");","map":{"version":3,"sources":["/Users/jordantay/Desktop/FinanceReact/src/components/Portfolio/PortfolioItem.js"],"names":["classes","Fragment","useContext","useEffect","useState","ButtonDelete","FetchContext","ButtonUpdate","PortfolioUpdate","axios","require","default","PortfolioItem","props","ctx","showModal","setShowModal","isRefreshed","setIsRefreshed","onDeleteStockHandler","fetch","id","method","headers","onFetchStockList","onShowModalHandler","hideModalHandler","APIKEY","stockPrice","url","ticker","params","modules","request","then","response","stockBid","data","quoteResponse","result","bid","stockAsk","ask","currentPrice","catch","error","console","td","name","td_amount","amount","mark"],"mappings":"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","sourcesContent":["import classes from './PortfolioItem.module.css';\nimport { Fragment, useContext, useEffect, useState } from 'react';\nimport ButtonDelete from '../UI/ButtonDelete';\nimport FetchContext from '../../Store/FetchContext';\nimport ButtonUpdate from '../UI/ButtonUpdate';\nimport PortfolioUpdate from './PortfolioUpdate';\nvar axios = require(\"axios\").default;\n\n\n function PortfolioItem(props) {\n    const ctx = useContext(FetchContext);\n    const [showModal, setShowModal] = useState(false)\n    const [isRefreshed, setIsRefreshed] = useState(false)\n    \n    async function onDeleteStockHandler() {\n        setIsRefreshed(true)\n         await fetch('http://127.0.0.1:8000/stock-delete/' + props.id, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        setIsRefreshed(false)\n    }\n\n    useEffect(() => {\n        ctx.onFetchStockList();\n    }, [isRefreshed]);\n\n    const onShowModalHandler = () => {\n        setShowModal(true);\n    }\n    const hideModalHandler = () => {\n        setShowModal(false);\n    }\n\n\n    useEffect(()=>{\n        const APIKEY = 'GCtknMw46M8sqfHfm639066y2xmvr95t5A16rhkx'\n\n        var stockPrice = {\n            method: 'GET',\n            url: 'https://yfapi.net/v6/finance/quote?symbols=' + props.ticker,\n            params: {modules: 'defaultKeyStatistics,assetProfile'},\n            headers:{\n                \"x-api-key\": APIKEY\n            }\n        };\n\n        axios.request(stockPrice).then(function(response){\n            const stockBid = response.data.quoteResponse.result[0].bid\n            const stockAsk = response.data.quoteResponse.result[0].ask\n            const currentPrice = (stockAsk + stockBid)/2\n            \n        }).catch(function(error){\n            console.error(error)\n        })\n    },[])\n\n    \n    return (\n        <Fragment>\n\n            <tr>\n                <td className={classes.td}>{props.ticker} </td>\n                <td className={classes.td}>{props.name} </td>\n                <td className={classes.td}>{currentPrice} </td>\n                <td className={classes.td_amount}>{props.amount}</td>\n                <td className={classes.td}> ${props.mark}</td>\n                <td><ButtonDelete onClick={onDeleteStockHandler}>DELETE</ButtonDelete></td>\n                <td><ButtonUpdate onClick={onShowModalHandler} >UPDATE</ButtonUpdate></td>\n                {showModal && <PortfolioUpdate onClose={hideModalHandler} id = {props.id}/>}\n\n            </tr>\n            \n        </Fragment>\n    )\n}\n\nexport default PortfolioItem;"]},"metadata":{},"sourceType":"module"}
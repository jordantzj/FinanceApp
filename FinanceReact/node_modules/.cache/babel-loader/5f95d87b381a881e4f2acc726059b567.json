{"ast":null,"code":"var _jsxFileName = \"/Users/jordantay/Desktop/FinanceReact/src/Charts/StockChart.js\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { React } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StockChart(props) {\n  const stockLists = props.stockLists;\n  let dataList = [];\n  let labelList = [];\n  stockLists.map(stock => {\n    const stockValue = stock.props.amount * stock.props.mark;\n    dataList.push(stockValue);\n    labelList.push(stock.props.name);\n  });\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  const data = {\n    labels: labelList,\n    datasets: [{\n      label: '# of Votes',\n      data: dataList,\n      options: {\n        title: {\n          position: 'top',\n          display: true,\n          text: 'TITLE',\n          padding: {\n            top: 1,\n            bottom: 3\n          }\n        }\n      },\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Pie, {\n    data: data,\n    width: 400,\n    height: 400,\n    options: {\n      maintainAspectRatio: false,\n      title: {\n        display: true,\n        text: 'TEST',\n        fontSize: 20,\n        position: 'top',\n        fontColor: '#666'\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_c = StockChart;\nexport default StockChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"sources":["/Users/jordantay/Desktop/FinanceReact/src/Charts/StockChart.js"],"names":["Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","React","StockChart","props","stockLists","dataList","labelList","map","stock","stockValue","amount","mark","push","name","register","data","labels","datasets","label","options","title","position","display","text","padding","top","bottom","backgroundColor","borderColor","borderWidth","maintainAspectRatio","fontSize","fontColor"],"mappings":";AAAA,SAASA,KAAK,IAAIC,OAAlB,EAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,UAA9D;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,KAAT,QAAsB,OAAtB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,SAAS,GAAG,EAAhB;AACAF,EAAAA,UAAU,CAACG,GAAX,CAAeC,KAAK,IAAI;AACpB,UAAMC,UAAU,GAAGD,KAAK,CAACL,KAAN,CAAYO,MAAZ,GAAqBF,KAAK,CAACL,KAAN,CAAYQ,IAApD;AACAN,IAAAA,QAAQ,CAACO,IAAT,CAAcH,UAAd;AACAH,IAAAA,SAAS,CAACM,IAAV,CAAeJ,KAAK,CAACL,KAAN,CAAYU,IAA3B;AAEH,GALD;AAOAjB,EAAAA,OAAO,CAACkB,QAAR,CAAiBjB,UAAjB,EAA6BC,OAA7B,EAAsCC,MAAtC;AACA,QAAMgB,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAEV,SADC;AAETW,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,YADX;AAEIH,MAAAA,IAAI,EAAEV,QAFV;AAGIc,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAE,KADP;AAEHC,UAAAA,OAAO,EAAE,IAFN;AAGHC,UAAAA,IAAI,EAAE,OAHH;AAIHC,UAAAA,OAAO,EAAE;AACLC,YAAAA,GAAG,EAAE,CADA;AAELC,YAAAA,MAAM,EAAE;AAFH;AAJN;AADF,OAHb;AAeIC,MAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAfrB;AAuBIC,MAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAvBjB;AA+BIC,MAAAA,WAAW,EAAE;AA/BjB,KADM;AAFD,GAAb;AAuCA,sBACI,QAAC,GAAD;AACI,IAAA,IAAI,EAAEd,IADV;AAEI,IAAA,KAAK,EAAE,GAFX;AAGI,IAAA,MAAM,EAAE,GAHZ;AAII,IAAA,OAAO,EAAE;AACLe,MAAAA,mBAAmB,EAAE,KADhB;AAELV,MAAAA,KAAK,EAAC;AACJE,QAAAA,OAAO,EAAC,IADJ;AAEJC,QAAAA,IAAI,EAAC,MAFD;AAGJQ,QAAAA,QAAQ,EAAC,EAHL;AAIJV,QAAAA,QAAQ,EAAE,KAJN;AAKJW,QAAAA,SAAS,EAAE;AALP;AAFD;AAJb;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;KApEQ9B,U;AAsET,eAAeA,UAAf","sourcesContent":["import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { React } from 'react';\n\nfunction StockChart(props) {\n    const stockLists = props.stockLists\n    let dataList = []\n    let labelList = []\n    stockLists.map(stock => {\n        const stockValue = stock.props.amount * stock.props.mark\n        dataList.push(stockValue)\n        labelList.push(stock.props.name)\n\n    })\n\n    ChartJS.register(ArcElement, Tooltip, Legend);\n    const data = {\n        labels: labelList,\n        datasets: [\n            {\n                label: '# of Votes',\n                data: dataList,\n                options: {\n                    title: {\n                        position: 'top',\n                        display: true,\n                        text: 'TITLE',\n                        padding: {\n                            top: 1,\n                            bottom: 3\n                        }\n                    }\n\n                },\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    return (\n        <Pie\n            data={data}\n            width={400}\n            height={400}\n            options={{\n                maintainAspectRatio: false,\n                title:{\n                  display:true,\n                  text:'TEST',\n                  fontSize:20,\n                  position: 'top',\n                  fontColor: '#666'\n                }\n              }}\n        />\n    )\n}\n\nexport default StockChart"]},"metadata":{},"sourceType":"module"}